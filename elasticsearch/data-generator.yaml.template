---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: data-generator-imagestream
  namespace: {{ namespace }}
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/purefield/ocp-virt'
    openshift.io/generated-by: OpenShiftWebConsole
  name: data-generator-buildconfig
  namespace: {{ namespace }}
  labels:
    app: data-generator
    app.kubernetes.io/component: data-generator
    app.kubernetes.io/instance: data-generator
    app.kubernetes.io/name: data-generator
    app.kubernetes.io/part-of: application
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 18-ubi9-minimal
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'data-generator-imagestream:latest'
  resources: {}
  successfulBuildsHistoryLimit: 2
  failedBuildsHistoryLimit: 2 
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'nodejs:16-ubi9-minimal'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/purefield/ocp-virt'
    contextDir: /generate-data
  triggers:
    - type: Generic
      generic:
        secretReference:
          name: data-generator-generic-webhook-secret
    - type: ConfigChange
  runPolicy: Serial
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: data-generator
  namespace: {{ namespace }}
  labels:
    app: data-generator
    app.kubernetes.io/component: data-generator
    app.kubernetes.io/instance: data-generator
    app.kubernetes.io/name: data-generator
    app.kubernetes.io/part-of: application
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 16-ubi9-minimal
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"coordinate"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-generator
  template:
    metadata:
      labels:
        app: data-generator
        deployment: data-generator
    spec:
      containers:
        - name: data-generator
          stdin: true
          tty: true
          image: >-
            image-registry.openshift-image-registry.svc:5000/{{ namespace }}/data-generator-imagestream
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: ES_NODE
              value: coordinate
            - name: ES_PORT
              value: '9200'
            - name: ES_INDEX
              value: generated
            - name: DATA_SIZE
              value: '5'
            - name: DATE_RATE
              value: '10'
            - name: DATA_BATCH
              value: '100'
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 25%
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: data-generator
  namespace: {{ namespace }}
spec:
  selector:
    app: data-generator
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: data-generator
  namespace: {{ namespace }}
  labels: {}
spec:
  host: data-generator.{{ baseDomain }}
  to:
    kind: Service
    name: data-generator
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    destinationCACertificate: ''
  port:
    targetPort: 3000

